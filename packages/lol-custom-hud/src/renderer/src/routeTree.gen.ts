/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ThemeRouteImport } from './routes/theme'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as HomeRouteImport } from './routes/home'
import { Route as GamestatsRouteImport } from './routes/gamestats'
import { Route as CustomizeRouteImport } from './routes/customize'

const ThemeRoute = ThemeRouteImport.update({
  id: '/theme',
  path: '/theme',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const GamestatsRoute = GamestatsRouteImport.update({
  id: '/gamestats',
  path: '/gamestats',
  getParentRoute: () => rootRouteImport,
} as any)
const CustomizeRoute = CustomizeRouteImport.update({
  id: '/customize',
  path: '/customize',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/customize': typeof CustomizeRoute
  '/gamestats': typeof GamestatsRoute
  '/home': typeof HomeRoute
  '/settings': typeof SettingsRoute
  '/theme': typeof ThemeRoute
}
export interface FileRoutesByTo {
  '/customize': typeof CustomizeRoute
  '/gamestats': typeof GamestatsRoute
  '/home': typeof HomeRoute
  '/settings': typeof SettingsRoute
  '/theme': typeof ThemeRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/customize': typeof CustomizeRoute
  '/gamestats': typeof GamestatsRoute
  '/home': typeof HomeRoute
  '/settings': typeof SettingsRoute
  '/theme': typeof ThemeRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/customize' | '/gamestats' | '/home' | '/settings' | '/theme'
  fileRoutesByTo: FileRoutesByTo
  to: '/customize' | '/gamestats' | '/home' | '/settings' | '/theme'
  id:
    | '__root__'
    | '/customize'
    | '/gamestats'
    | '/home'
    | '/settings'
    | '/theme'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  CustomizeRoute: typeof CustomizeRoute
  GamestatsRoute: typeof GamestatsRoute
  HomeRoute: typeof HomeRoute
  SettingsRoute: typeof SettingsRoute
  ThemeRoute: typeof ThemeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/theme': {
      id: '/theme'
      path: '/theme'
      fullPath: '/theme'
      preLoaderRoute: typeof ThemeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gamestats': {
      id: '/gamestats'
      path: '/gamestats'
      fullPath: '/gamestats'
      preLoaderRoute: typeof GamestatsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/customize': {
      id: '/customize'
      path: '/customize'
      fullPath: '/customize'
      preLoaderRoute: typeof CustomizeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  CustomizeRoute: CustomizeRoute,
  GamestatsRoute: GamestatsRoute,
  HomeRoute: HomeRoute,
  SettingsRoute: SettingsRoute,
  ThemeRoute: ThemeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
